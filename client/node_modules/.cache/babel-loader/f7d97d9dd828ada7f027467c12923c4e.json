{"ast":null,"code":"var _jsxFileName = \"C:\\\\OpenMonzac\\\\client\\\\src\\\\mainComponents\\\\articleEditor.js\";\nimport React, { Component } from \"react\";\nimport { MonzacContext } from \"../context/monzacContext\";\n\nclass ArticleEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(MonzacContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, context => React.createElement(\"p\", {\n      id: \"id-article-editor-content\",\n      contentEditable: true,\n      onInput: context.state.updateNewArticleContent,\n      \"data-placeholder\": \"Write here...!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ArticleEditor; //class ArticleEditor extends React.Component {\n// constructor(props) {\n//   super(props);\n// }\n// shouldComponentUpdate(nextProps) {\n//   return nextProps.html !== this.nodeSelect.innerHTML;\n// }\n// componentDidUpdate() {\n//   if (this.props.html !== this.nodeSelect.innerHTML) {\n//     this.nodeSelect.innerHTML = this.props.html;\n//   }\n// }\n// emitChange = () => {\n//   let html = this.nodeSelect.innerHTML;\n//   if (this.props.onChange && html !== this.lastHtml) {\n//     this.props.onChange({\n//       target: {\n//         value: html,\n//       },\n//     });\n//   }\n//   this.lastHtml = html;\n// };\n//   render() {\n//     //console.log(\"ArticleEditor\" + this.props.value);\n//     return (\n//       <p\n//         // ref={(ref) => {\n//         //   this.nodeSelect = ref;\n//         // }}\n//         id=\"id-article-editor-content\"\n//         //onInput={this.emitChange}\n//         //onBlur={this.emitChange}\n//         contentEditable\n//         data-placeholder=\"Write here...!\"\n//         //dangerouslySetInnerHTML={{ __html: this.props.html }}\n//       >\n//         {this.props.value}\n//       </p>\n//     );\n//   }\n// }","map":{"version":3,"sources":["C:/OpenMonzac/client/src/mainComponents/articleEditor.js"],"names":["React","Component","MonzacContext","ArticleEditor","state","render","context","updateNewArticleContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B,EAD4B;AAAA;;AAGpCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD,CAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,OAAD,IACC;AACE,MAAA,EAAE,EAAC,2BADL;AAEE,MAAA,eAAe,MAFjB;AAGE,MAAA,OAAO,EAAEA,OAAO,CAACF,KAAR,CAAcG,uBAHzB;AAIE,0BAAiB,gBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAYD;;AAhBmC;;AAkBtC,eAAeJ,aAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MonzacContext } from \"../context/monzacContext\";\r\n\r\nclass ArticleEditor extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <MonzacContext.Consumer>\r\n        {(context) => (\r\n          <p\r\n            id=\"id-article-editor-content\"\r\n            contentEditable\r\n            onInput={context.state.updateNewArticleContent}\r\n            data-placeholder=\"Write here...!\"\r\n          ></p>\r\n        )}\r\n      </MonzacContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default ArticleEditor;\r\n\r\n//class ArticleEditor extends React.Component {\r\n// constructor(props) {\r\n//   super(props);\r\n// }\r\n// shouldComponentUpdate(nextProps) {\r\n//   return nextProps.html !== this.nodeSelect.innerHTML;\r\n// }\r\n\r\n// componentDidUpdate() {\r\n//   if (this.props.html !== this.nodeSelect.innerHTML) {\r\n//     this.nodeSelect.innerHTML = this.props.html;\r\n//   }\r\n// }\r\n\r\n// emitChange = () => {\r\n//   let html = this.nodeSelect.innerHTML;\r\n//   if (this.props.onChange && html !== this.lastHtml) {\r\n//     this.props.onChange({\r\n//       target: {\r\n//         value: html,\r\n//       },\r\n//     });\r\n//   }\r\n//   this.lastHtml = html;\r\n// };\r\n\r\n//   render() {\r\n//     //console.log(\"ArticleEditor\" + this.props.value);\r\n//     return (\r\n//       <p\r\n//         // ref={(ref) => {\r\n//         //   this.nodeSelect = ref;\r\n//         // }}\r\n//         id=\"id-article-editor-content\"\r\n//         //onInput={this.emitChange}\r\n//         //onBlur={this.emitChange}\r\n//         contentEditable\r\n//         data-placeholder=\"Write here...!\"\r\n//         //dangerouslySetInnerHTML={{ __html: this.props.html }}\r\n//       >\r\n//         {this.props.value}\r\n//       </p>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}