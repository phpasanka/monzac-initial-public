{"ast":null,"code":"var _jsxFileName = \"C:\\\\OpenMonzac\\\\client\\\\src\\\\context\\\\monzacContext.jsx\";\nimport React, { Component } from \"react\";\nexport const MonzacContext = React.createContext();\nexport class MonzacProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      createArticleTitle: \"\",\n      selectedArticleCategory: \"\",\n      createArticleDescription: \"\",\n      catList: [],\n      articleThumbList: [],\n      isCreateNewArticleEnabled: false,\n      newArticleContent: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/get/category\").then(res => res.json()).then(res => {\n      let catList = res.map(r => r.name);\n      this.setState({\n        catList: catList\n      });\n    }); //getArticleThumbList = () => {\n\n    fetch(\"/api/article/thumbist\").then(res => res.json()).then(res => {\n      let articleThumbList = res.map((value, index) => {\n        title: value.title;\n\n        content: value.content;\n      } // (t) => t.title,\n      // (t) => t.content\n      );\n      this.setState({\n        articleThumbList\n      }); //return articleThumbList;\n    }); //};\n  }\n\n  render() {\n    return React.createElement(MonzacContext.Provider, {\n      value: {\n        state: this.state,\n        toggleIsCreateNewArticleEnabled: () => this.setState({\n          isCreateNewArticleEnabled: !this.state.isCreateNewArticleEnabled,\n          newArticleContent: \"\",\n          createArticleTitle: \"\"\n        }),\n        updateNewArticleContent: e => this.setState({\n          newArticleContent: e.target.value\n        }),\n        updateNewArticleTitle: e => this.setState({\n          createArticleTitle: e.target.value\n        }),\n        updateSelectedCategory: e => this.setState({\n          selectedArticleCategory: e.target.value\n        }) //\n\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n} //","map":{"version":3,"sources":["C:/OpenMonzac/client/src/context/monzacContext.jsx"],"names":["React","Component","MonzacContext","createContext","MonzacProvider","state","createArticleTitle","selectedArticleCategory","createArticleDescription","catList","articleThumbList","isCreateNewArticleEnabled","newArticleContent","componentDidMount","fetch","then","res","json","map","r","name","setState","value","index","title","content","render","toggleIsCreateNewArticleEnabled","updateNewArticleContent","e","target","updateNewArticleTitle","updateSelectedCategory","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,aAAa,GAAGF,KAAK,CAACG,aAAN,EAAtB;AAEP,OAAO,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAC5CI,KAD4C,GACpC;AACNC,MAAAA,kBAAkB,EAAE,EADd;AAENC,MAAAA,uBAAuB,EAAE,EAFnB;AAGNC,MAAAA,wBAAwB,EAAE,EAHpB;AAINC,MAAAA,OAAO,EAAE,EAJH;AAKNC,MAAAA,gBAAgB,EAAE,EALZ;AAMNC,MAAAA,yBAAyB,EAAE,KANrB;AAONC,MAAAA,iBAAiB,EAAE;AAPb,KADoC;AAAA;;AAW5CC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,eAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,UAAIP,OAAO,GAAGO,GAAG,CAACE,GAAJ,CAASC,CAAD,IAAOA,CAAC,CAACC,IAAjB,CAAd;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACD,KALH,EADkB,CAQlB;;AACAK,IAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,UAAIN,gBAAgB,GAAGM,GAAG,CAACE,GAAJ,CACrB,CAACI,KAAD,EAAQC,KAAR,KAAkB;AAChBC,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN;;AACPC,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN;AACV,OAJoB,CAKrB;AACA;AANqB,OAAvB;AAQA,WAAKJ,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd,EATa,CAUb;AACD,KAbH,EATkB,CAuBlB;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD,CAAe,QAAf;AACE,MAAA,KAAK,EAAE;AACLrB,QAAAA,KAAK,EAAE,KAAKA,KADP;AAELsB,QAAAA,+BAA+B,EAAE,MAC/B,KAAKN,QAAL,CAAc;AACZV,UAAAA,yBAAyB,EAAE,CAAC,KAAKN,KAAL,CAAWM,yBAD3B;AAEZC,UAAAA,iBAAiB,EAAE,EAFP;AAGZN,UAAAA,kBAAkB,EAAE;AAHR,SAAd,CAHG;AAQLsB,QAAAA,uBAAuB,EAAGC,CAAD,IACvB,KAAKR,QAAL,CAAc;AACZT,UAAAA,iBAAiB,EAAEiB,CAAC,CAACC,MAAF,CAASR;AADhB,SAAd,CATG;AAYLS,QAAAA,qBAAqB,EAAGF,CAAD,IACrB,KAAKR,QAAL,CAAc;AACZf,UAAAA,kBAAkB,EAAEuB,CAAC,CAACC,MAAF,CAASR;AADjB,SAAd,CAbG;AAgBLU,QAAAA,sBAAsB,EAAGH,CAAD,IACtB,KAAKR,QAAL,CAAc;AACZd,UAAAA,uBAAuB,EAAEsB,CAAC,CAACC,MAAF,CAASR;AADtB,SAAd,CAjBG,CAoBL;;AApBK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAwBG,KAAKW,KAAL,CAAWC,QAxBd,CADF;AA4BD;;AAlE2C,C,CAoE9C","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport const MonzacContext = React.createContext();\r\n\r\nexport class MonzacProvider extends Component {\r\n  state = {\r\n    createArticleTitle: \"\",\r\n    selectedArticleCategory: \"\",\r\n    createArticleDescription: \"\",\r\n    catList: [],\r\n    articleThumbList: [],\r\n    isCreateNewArticleEnabled: false,\r\n    newArticleContent: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"/get/category\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        let catList = res.map((r) => r.name);\r\n        this.setState({ catList: catList });\r\n      });\r\n\r\n    //getArticleThumbList = () => {\r\n    fetch(\"/api/article/thumbist\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        let articleThumbList = res.map(\r\n          (value, index) => {\r\n            title: value.title;\r\n            content: value.content;\r\n          }\r\n          // (t) => t.title,\r\n          // (t) => t.content\r\n        );\r\n        this.setState({ articleThumbList });\r\n        //return articleThumbList;\r\n      });\r\n    //};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MonzacContext.Provider\r\n        value={{\r\n          state: this.state,\r\n          toggleIsCreateNewArticleEnabled: () =>\r\n            this.setState({\r\n              isCreateNewArticleEnabled: !this.state.isCreateNewArticleEnabled,\r\n              newArticleContent: \"\",\r\n              createArticleTitle: \"\",\r\n            }),\r\n          updateNewArticleContent: (e) =>\r\n            this.setState({\r\n              newArticleContent: e.target.value,\r\n            }),\r\n          updateNewArticleTitle: (e) =>\r\n            this.setState({\r\n              createArticleTitle: e.target.value,\r\n            }),\r\n          updateSelectedCategory: (e) =>\r\n            this.setState({\r\n              selectedArticleCategory: e.target.value,\r\n            }),\r\n          //\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </MonzacContext.Provider>\r\n    );\r\n  }\r\n}\r\n//\r\n"]},"metadata":{},"sourceType":"module"}