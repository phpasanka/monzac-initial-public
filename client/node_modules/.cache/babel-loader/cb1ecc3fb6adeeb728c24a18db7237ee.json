{"ast":null,"code":"import getGroupId from './getGroupId';\nexport default function flattenOptions(options) {\n  if (!Array.isArray(options)) {\n    return [];\n  }\n\n  var nextOptions = [];\n  options.forEach(function (option, index) {\n    if ('type' in option && option.type === 'group') {\n      var id = getGroupId(option);\n      option.items.forEach(function (groupOption) {\n        var nextGroupOption = Object.assign({}, groupOption);\n        nextGroupOption.groupId = id;\n        nextGroupOption.groupName = option.name;\n        nextOptions.push(nextGroupOption);\n      });\n    } else {\n      nextOptions.push(Object.assign({}, option, {\n        index: index\n      }));\n    }\n  });\n  return nextOptions;\n}\n;","map":{"version":3,"sources":["C:/OpenMonzac/node_modules/react-select-search/dist/esm/lib/flattenOptions.js"],"names":["getGroupId","flattenOptions","options","Array","isArray","nextOptions","forEach","option","index","type","id","items","groupOption","nextGroupOption","Object","assign","groupId","groupName","name","push"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC9C,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAL,EAA6B;AAC3B,WAAO,EAAP;AACD;;AAED,MAAIG,WAAW,GAAG,EAAlB;AACAH,EAAAA,OAAO,CAACI,OAAR,CAAgB,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACvC,QAAI,UAAUD,MAAV,IAAoBA,MAAM,CAACE,IAAP,KAAgB,OAAxC,EAAiD;AAC/C,UAAIC,EAAE,GAAGV,UAAU,CAACO,MAAD,CAAnB;AACAA,MAAAA,MAAM,CAACI,KAAP,CAAaL,OAAb,CAAqB,UAAUM,WAAV,EAAuB;AAC1C,YAAIC,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,WAAlB,CAAtB;AACAC,QAAAA,eAAe,CAACG,OAAhB,GAA0BN,EAA1B;AACAG,QAAAA,eAAe,CAACI,SAAhB,GAA4BV,MAAM,CAACW,IAAnC;AACAb,QAAAA,WAAW,CAACc,IAAZ,CAAiBN,eAAjB;AACD,OALD;AAMD,KARD,MAQO;AACLR,MAAAA,WAAW,CAACc,IAAZ,CAAiBL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,MAAlB,EAA0B;AACzCC,QAAAA,KAAK,EAAEA;AADkC,OAA1B,CAAjB;AAGD;AACF,GAdD;AAeA,SAAOH,WAAP;AACD;AACD","sourcesContent":["import getGroupId from './getGroupId';\nexport default function flattenOptions(options) {\n  if (!Array.isArray(options)) {\n    return [];\n  }\n\n  var nextOptions = [];\n  options.forEach(function (option, index) {\n    if ('type' in option && option.type === 'group') {\n      var id = getGroupId(option);\n      option.items.forEach(function (groupOption) {\n        var nextGroupOption = Object.assign({}, groupOption);\n        nextGroupOption.groupId = id;\n        nextGroupOption.groupName = option.name;\n        nextOptions.push(nextGroupOption);\n      });\n    } else {\n      nextOptions.push(Object.assign({}, option, {\n        index: index\n      }));\n    }\n  });\n  return nextOptions;\n}\n;"]},"metadata":{},"sourceType":"module"}