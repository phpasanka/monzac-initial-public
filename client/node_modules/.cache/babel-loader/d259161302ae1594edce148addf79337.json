{"ast":null,"code":"import findGroupIndex from './findGroupIndex';\nexport default function groupOptions(options) {\n  var nextOptions = [];\n  options.forEach(function (option, i) {\n    if ('groupId' in option) {\n      var nextOption = Object.assign({}, option);\n      var groupIndex = findGroupIndex(nextOptions, nextOption.groupId);\n      nextOption.index = i;\n\n      if (groupIndex !== null && groupIndex > -1) {\n        nextOptions[groupIndex].items.push(nextOption);\n      } else {\n        nextOptions.push({\n          items: [nextOption],\n          groupId: option.groupId,\n          type: 'group',\n          name: option.groupName\n        });\n      }\n    } else {\n      nextOptions.push(option);\n    }\n  });\n  return nextOptions;\n}\n;","map":{"version":3,"sources":["C:/OpenMonzac/node_modules/react-select-search/dist/esm/lib/groupOptions.js"],"names":["findGroupIndex","groupOptions","options","nextOptions","forEach","option","i","nextOption","Object","assign","groupIndex","groupId","index","items","push","type","name","groupName"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,eAAe,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC5C,MAAIC,WAAW,GAAG,EAAlB;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgB,UAAUC,MAAV,EAAkBC,CAAlB,EAAqB;AACnC,QAAI,aAAaD,MAAjB,EAAyB;AACvB,UAAIE,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,MAAlB,CAAjB;AACA,UAAIK,UAAU,GAAGV,cAAc,CAACG,WAAD,EAAcI,UAAU,CAACI,OAAzB,CAA/B;AACAJ,MAAAA,UAAU,CAACK,KAAX,GAAmBN,CAAnB;;AAEA,UAAII,UAAU,KAAK,IAAf,IAAuBA,UAAU,GAAG,CAAC,CAAzC,EAA4C;AAC1CP,QAAAA,WAAW,CAACO,UAAD,CAAX,CAAwBG,KAAxB,CAA8BC,IAA9B,CAAmCP,UAAnC;AACD,OAFD,MAEO;AACLJ,QAAAA,WAAW,CAACW,IAAZ,CAAiB;AACfD,UAAAA,KAAK,EAAE,CAACN,UAAD,CADQ;AAEfI,UAAAA,OAAO,EAAEN,MAAM,CAACM,OAFD;AAGfI,UAAAA,IAAI,EAAE,OAHS;AAIfC,UAAAA,IAAI,EAAEX,MAAM,CAACY;AAJE,SAAjB;AAMD;AACF,KAfD,MAeO;AACLd,MAAAA,WAAW,CAACW,IAAZ,CAAiBT,MAAjB;AACD;AACF,GAnBD;AAoBA,SAAOF,WAAP;AACD;AACD","sourcesContent":["import findGroupIndex from './findGroupIndex';\nexport default function groupOptions(options) {\n  var nextOptions = [];\n  options.forEach(function (option, i) {\n    if ('groupId' in option) {\n      var nextOption = Object.assign({}, option);\n      var groupIndex = findGroupIndex(nextOptions, nextOption.groupId);\n      nextOption.index = i;\n\n      if (groupIndex !== null && groupIndex > -1) {\n        nextOptions[groupIndex].items.push(nextOption);\n      } else {\n        nextOptions.push({\n          items: [nextOption],\n          groupId: option.groupId,\n          type: 'group',\n          name: option.groupName\n        });\n      }\n    } else {\n      nextOptions.push(option);\n    }\n  });\n  return nextOptions;\n}\n;"]},"metadata":{},"sourceType":"module"}