{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\nimport { optionType, valueType } from '../types';\nimport isSelected from '../lib/isSelected';\n\nvar Options = function Options(_ref) {\n  var options = _ref.options,\n      optionProps = _ref.optionProps,\n      snapshot = _ref.snapshot,\n      className = _ref.className,\n      renderGroupHeader = _ref.renderGroupHeader,\n      renderOption = _ref.renderOption;\n  return React.createElement(\"ul\", {\n    className: className('options')\n  }, options.map(function (option) {\n    if (option.type === 'group') {\n      return React.createElement(\"li\", {\n        role: \"none\",\n        className: className('row'),\n        key: option.groupId\n      }, React.createElement(\"div\", {\n        className: className('group')\n      }, React.createElement(\"div\", {\n        className: className('group-header')\n      }, renderGroupHeader(option.name)), React.createElement(Options, {\n        options: option.items,\n        snapshot: snapshot,\n        optionProps: optionProps,\n        className: className,\n        renderOption: renderOption\n      })));\n    }\n\n    return React.createElement(Option, _extends({\n      key: option.value,\n      className: className,\n      optionProps: optionProps,\n      selected: isSelected(option.value, snapshot.value),\n      highlighted: snapshot.highlighted === option.index,\n      renderOption: renderOption\n    }, option));\n  }));\n};\n\nOptions.defaultProps = {\n  renderOption: null,\n  renderGroupHeader: function renderGroupHeader(name) {\n    return name;\n  }\n};\nOptions.propTypes = {\n  options: PropTypes.arrayOf(optionType).isRequired,\n  snapshot: PropTypes.shape({\n    value: valueType,\n    highlighted: PropTypes.number,\n    focus: PropTypes.bool\n  }).isRequired,\n  optionProps: PropTypes.shape({\n    tabIndex: PropTypes.string.isRequired,\n    onMouseDown: PropTypes.func.isRequired\n  }).isRequired,\n  className: PropTypes.func.isRequired,\n  renderOption: PropTypes.func,\n  renderGroupHeader: PropTypes.func\n};\nexport default Options;","map":{"version":3,"sources":["C:/OpenMonzac/node_modules/react-select-search/dist/esm/Components/Options.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","PropTypes","Option","optionType","valueType","isSelected","Options","_ref","options","optionProps","snapshot","className","renderGroupHeader","renderOption","createElement","map","option","type","role","groupId","name","items","value","selected","highlighted","index","defaultProps","propTypes","arrayOf","isRequired","shape","number","focus","bool","tabIndex","string","onMouseDown","func"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\nimport { optionType, valueType } from '../types';\nimport isSelected from '../lib/isSelected';\n\nvar Options = function Options(_ref) {\n  var options = _ref.options,\n      optionProps = _ref.optionProps,\n      snapshot = _ref.snapshot,\n      className = _ref.className,\n      renderGroupHeader = _ref.renderGroupHeader,\n      renderOption = _ref.renderOption;\n  return React.createElement(\"ul\", {\n    className: className('options')\n  }, options.map(function (option) {\n    if (option.type === 'group') {\n      return React.createElement(\"li\", {\n        role: \"none\",\n        className: className('row'),\n        key: option.groupId\n      }, React.createElement(\"div\", {\n        className: className('group')\n      }, React.createElement(\"div\", {\n        className: className('group-header')\n      }, renderGroupHeader(option.name)), React.createElement(Options, {\n        options: option.items,\n        snapshot: snapshot,\n        optionProps: optionProps,\n        className: className,\n        renderOption: renderOption\n      })));\n    }\n\n    return React.createElement(Option, _extends({\n      key: option.value,\n      className: className,\n      optionProps: optionProps,\n      selected: isSelected(option.value, snapshot.value),\n      highlighted: snapshot.highlighted === option.index,\n      renderOption: renderOption\n    }, option));\n  }));\n};\n\nOptions.defaultProps = {\n  renderOption: null,\n  renderGroupHeader: function renderGroupHeader(name) {\n    return name;\n  }\n};\nOptions.propTypes = {\n  options: PropTypes.arrayOf(optionType).isRequired,\n  snapshot: PropTypes.shape({\n    value: valueType,\n    highlighted: PropTypes.number,\n    focus: PropTypes.bool\n  }).isRequired,\n  optionProps: PropTypes.shape({\n    tabIndex: PropTypes.string.isRequired,\n    onMouseDown: PropTypes.func.isRequired\n  }).isRequired,\n  className: PropTypes.func.isRequired,\n  renderOption: PropTypes.func,\n  renderGroupHeader: PropTypes.func\n};\nexport default Options;"]},"metadata":{},"sourceType":"module"}