{"ast":null,"code":"var _jsxFileName = \"C:\\\\OpenMonzac\\\\client\\\\src\\\\mainComponents\\\\articleEditor.js\";\nimport React, { Component, useContext, useEffect, useState } from \"react\";\nimport { ArticleContext } from \"../context/ArticleContext\";\n\nconst ArticleEditor = () => {\n  const [monzacState, setMonzacState] = useContext(ArticleContext);\n  const [NewArticleContent, setNewArticleContent] = useState(\"\");\n\n  const updateNewArticleContent = e => {\n    monzacState[5] = e.target.value;\n    setNewArticleContent(monzacState); //alert(monzacState[5]);\n\n    console.log(monzacState[5]);\n  };\n\n  return React.createElement(\"p\", {\n    id: \"id-article-editor-content\",\n    contentEditable: true,\n    onInput: updateNewArticleContent,\n    \"data-placeholder\": \"Write here...!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n}; //class ArticleEditor extends React.Component {\n// constructor(props) {\n//   super(props);\n// }\n// shouldComponentUpdate(nextProps) {\n//   return nextProps.html !== this.nodeSelect.innerHTML;\n// }\n// componentDidUpdate() {\n//   if (this.props.html !== this.nodeSelect.innerHTML) {\n//     this.nodeSelect.innerHTML = this.props.html;\n//   }\n// }\n// emitChange = () => {\n//   let html = this.nodeSelect.innerHTML;\n//   if (this.props.onChange && html !== this.lastHtml) {\n//     this.props.onChange({\n//       target: {\n//         value: html,\n//       },\n//     });\n//   }\n//   this.lastHtml = html;\n// };\n//   render() {\n//     //console.log(\"ArticleEditor\" + this.props.value);\n//     return (\n//       <p\n//         // ref={(ref) => {\n//         //   this.nodeSelect = ref;\n//         // }}\n//         id=\"id-article-editor-content\"\n//         //onInput={this.emitChange}\n//         //onBlur={this.emitChange}\n//         contentEditable\n//         data-placeholder=\"Write here...!\"\n//         //dangerouslySetInnerHTML={{ __html: this.props.html }}\n//       >\n//         {this.props.value}\n//       </p>\n//     );\n//   }\n// }\n\n\nexport default ArticleEditor;","map":{"version":3,"sources":["C:/OpenMonzac/client/src/mainComponents/articleEditor.js"],"names":["React","Component","useContext","useEffect","useState","ArticleContext","ArticleEditor","monzacState","setMonzacState","NewArticleContent","setNewArticleContent","updateNewArticleContent","e","target","value","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAkE,OAAlE;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,UAAU,CAACG,cAAD,CAAhD;AACA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CN,QAAQ,CAAC,EAAD,CAA1D;;AAEA,QAAMO,uBAAuB,GAAIC,CAAD,IAAO;AACrCL,IAAAA,WAAW,CAAC,CAAD,CAAX,GAAiBK,CAAC,CAACC,MAAF,CAASC,KAA1B;AACAJ,IAAAA,oBAAoB,CAACH,WAAD,CAApB,CAFqC,CAGrC;;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAW,CAAC,CAAD,CAAvB;AACD,GALD;;AAMA,SACE;AACE,IAAA,EAAE,EAAC,2BADL;AAEE,IAAA,eAAe,MAFjB;AAGE,IAAA,OAAO,EAAEI,uBAHX;AAIE,wBAAiB,gBAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CAlBD,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,aAAf","sourcesContent":["import React, { Component, useContext, useEffect, useState } from \"react\";\r\nimport { ArticleContext } from \"../context/ArticleContext\";\r\n\r\nconst ArticleEditor = () => {\r\n  const [monzacState, setMonzacState] = useContext(ArticleContext);\r\n  const [NewArticleContent, setNewArticleContent] = useState(\"\");\r\n\r\n  const updateNewArticleContent = (e) => {\r\n    monzacState[5] = e.target.value;\r\n    setNewArticleContent(monzacState);\r\n    //alert(monzacState[5]);\r\n    console.log(monzacState[5]);\r\n  };\r\n  return (\r\n    <p\r\n      id=\"id-article-editor-content\"\r\n      contentEditable\r\n      onInput={updateNewArticleContent}\r\n      data-placeholder=\"Write here...!\"\r\n    ></p>\r\n  );\r\n};\r\n\r\n//class ArticleEditor extends React.Component {\r\n// constructor(props) {\r\n//   super(props);\r\n// }\r\n// shouldComponentUpdate(nextProps) {\r\n//   return nextProps.html !== this.nodeSelect.innerHTML;\r\n// }\r\n\r\n// componentDidUpdate() {\r\n//   if (this.props.html !== this.nodeSelect.innerHTML) {\r\n//     this.nodeSelect.innerHTML = this.props.html;\r\n//   }\r\n// }\r\n\r\n// emitChange = () => {\r\n//   let html = this.nodeSelect.innerHTML;\r\n//   if (this.props.onChange && html !== this.lastHtml) {\r\n//     this.props.onChange({\r\n//       target: {\r\n//         value: html,\r\n//       },\r\n//     });\r\n//   }\r\n//   this.lastHtml = html;\r\n// };\r\n\r\n//   render() {\r\n//     //console.log(\"ArticleEditor\" + this.props.value);\r\n//     return (\r\n//       <p\r\n//         // ref={(ref) => {\r\n//         //   this.nodeSelect = ref;\r\n//         // }}\r\n//         id=\"id-article-editor-content\"\r\n//         //onInput={this.emitChange}\r\n//         //onBlur={this.emitChange}\r\n//         contentEditable\r\n//         data-placeholder=\"Write here...!\"\r\n//         //dangerouslySetInnerHTML={{ __html: this.props.html }}\r\n//       >\r\n//         {this.props.value}\r\n//       </p>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default ArticleEditor;\r\n"]},"metadata":{},"sourceType":"module"}